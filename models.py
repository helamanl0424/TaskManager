from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# Base class for our class definitions
Base = declarative_base()

# Set up the database engine to connect to the SQLite database
# The echo=True flag will log all the SQL generated by SQLAlchemy, which is helpful for debugging
engine = create_engine('sqlite:///tasks.db', echo=True)

# Sessionmaker instance to handle transactions
Session = sessionmaker(bind=engine)


class Task(Base):
    __tablename__ = 'tasks'

    id = Column(Integer, primary_key=True)
    title = Column(String)
    description = Column(String)

    def __repr__(self):
        return f"<Task(title={self.title}, description={self.description})>"


# Create all tables in the database based on the Base metadata
Base.metadata.create_all(engine)
